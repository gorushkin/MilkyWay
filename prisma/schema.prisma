// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String          @id @default(cuid())
  telegramId    Int             @unique
  username      String?
  first_name    String?
  lastSendTime  DateTime?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  words         Word[]
  mode          String
  period        Int
  language      String?
  WordFrequency WordFrequency[]
}

model Word {
  id            String          @id @default(cuid())
  text          String          @unique
  entry         Entry[]
  User          User?           @relation(fields: [userId], references: [id])
  userId        String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  language      String
  WordFrequency WordFrequency[]
}

// TODO: add word

model Entry {
  id             String        @id @default(cuid())
  text           String
  part_of_speech String
  transcription  String?
  translation    Translation[]
  Word           Word?         @relation(fields: [wordId], references: [id])
  wordId         String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

// TODO: add word

model Translation {
  id             String   @id @default(cuid())
  text           String   @unique
  part_of_speech String
  synonym        String?
  meaning        String?
  example        String?
  Entry          Entry?   @relation(fields: [entryId], references: [id])
  entryId        String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model WordFrequency {
  id        String @id @default(cuid())
  word      Word   @relation(fields: [wordId], references: [id])
  user      User   @relation(fields: [userId], references: [id])
  wordId    String
  userId    String
  frequency Int
}
